<% content_for :admin_console do %>
  <%= link_to "Add a Lot", new_land_path, class: 'btn btn-info text-white' %>
<% end %>

<div class="container">

  <div class="double-header text-center">
    <h2 class="text-center title">
      Project Concepts
    </h2>
    <h3 class="title-blurb">
        Weâ€™re trying something new. We want to put designs in front of you to see what you think. The goal? To put designs you like on locations you love. All feedback is welcome!
    </h3>
    <span>
      Price ranges are representative of home price with standard features.
    </span>
    <br /><br />
  </div>
  <br />

  <% if @lands.blank? %>
    <div class="text-center alert alert-warning lead">
      There are no lots in the system.
    </div>
  <% else %>
    <%= render 'lands_index' %>
  <% end %>


  <!-- MAPBOX -->
  <div class="mapbox">
    <div id='map' class='map pad2'></div>
  </div>

  <script>
    if (!('remove' in Element.prototype)) {
      Element.prototype.remove = function() {
        if (this.parentNode) {
          this.parentNode.removeChild(this);
        }
      };
    }
    // load map graphic
    mapboxgl.accessToken = 'pk.eyJ1IjoibW9kdWxldGVjaCIsImEiOiJjazA1YzVoNXgwMGV4M3BxdDFvZGZmd3JmIn0.LawkaOqv-gClqemcScZTGg';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/moduletech/ck05c5xpa027p1cmtlkolntu4'
    });

    // generate data points for map
    var mapBoxLots = {
      "type": "FeatureCollection",
      "features": []
    };
    var features = []

    var lots_string = '<%= @lands.all.to_json.to_str %>'.replace(/&quot;/g, '"')

    var lots_obj = JSON.parse(lots_string)
    lots_obj.forEach(function (lot,index){
      var feature = {
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": [
            lot.longitude,
            lot.latitude
          ]
        },
        "properties": {
          "address": lot.address,
          "model": lot.model.name,
          "id": lot.id,
        }
      }

      features.push(feature)
    });

    mapBoxLots.features = features

    // add datapoints layer to map
    map.on('load', function(e) {
      // Add markers to map
      map.addLayer({
        id: 'locations',
        type: 'symbol',
        // Add a GeoJSON source containing place coordinates and information.
        source: {
          type: 'geojson',
          data: mapBoxLots
        },
        layout: {
          'icon-image': 'marker-15',
          'icon-allow-overlap': true,
        }
      });
    });

    function flyToStore(currentFeature) {
      map.flyTo({
        center: currentFeature.geometry.coordinates,
        zoom: 15
      });
    }

    function showLotCard(currentFeature) {
      var lot_card = document.getElementById('lot-card-' + currentFeature.properties.id);
      lot_card.style.margin = '0';
      lot_card.style.position = 'fixed';
      lot_card.style.top = '7%';
      lot_card.style.left = '20%';
      lot_card.style.zIndex = '1000';
      lot_card.style.width = '60%';
      lot_card.style.height = '85vh';
      lot_card.style.overflow = 'scroll';
      lot_card.style.display = 'block';

    }


    // Add an event listener for when a user clicks on the map
    map.on('click', function(e) {
      // Query all the rendered points in the view
      var features = map.queryRenderedFeatures(e.point, { layers: ['locations'] });
      if (features.length) {
        var clickedPoint = features[0];
        // 1. Fly to the point
        flyToStore(clickedPoint);
        // 2. Close all other popups and display popup for clicked store
        showLotCard(clickedPoint);
      }
    });

    mapBoxLots.features.forEach(function(marker) {
      // Create a div element for the marker
      var el = document.createElement('div');
      // Add a class called 'marker' to each div
      el.className = 'marker';
      // By default the image for your custom marker will be anchored
      // by its center. Adjust the position accordingly
      // Create the custom markers, set their position, and add to map
      new mapboxgl.Marker(el, { offset: [0, -23] }).setLngLat(marker.geometry.coordinates).addTo(map);
      el.addEventListener('click', function(e) {
        var activeItem = document.getElementsByClassName('active');
        // 1. Fly to the point
        flyToStore(marker);
        // 2. Close all other popups and display popup for clicked store
        createPopUp(marker);
        // 3. Highlight listing in sidebar (and remove highlight for all other listings)
        e.stopPropagation();
      });
    });

  </script>
  <!-- END MAPBOX -->
<br />
